{"ast":null,"code":"var _jsxFileName = \"/Users/wemi/Desktop/My Coding Projects/weather_app2_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: '7beedcd716bb91a99f2dfbd7d36d07d9',\n  base_url: 'http://api.openweathermap.org/data/2.5/weather?'\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [city, setCity] = useState('');\n\n  const fetchData = e => {\n    e.preventDefault();\n    const data = axios.get(`${api.base_url}weather?q=${query}&units=metric&appid=${api.key}`).then(res => res.data);\n  }; // function handleChange(e) {\n  //   setQuery(e.target.value);\n  // }\n\n\n  const dateBuilder = d => {\n    let date = String(new window.Date()); //creates a new date object with current date and time\n\n    date = date.slice(3, 15);\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    return `${day} ${date}`;\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setCity(e.target.value),\n          value: true,\n          onKeyPress: () => fetchData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location\",\n          children: \"Calgary, Canada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: dateBuilder(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temp\",\n          children: \"15\\xB0c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather\",\n          children: \"Sunny\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"58IhKRErqvEd9PWXJTnmwLnhn5A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wemi/Desktop/My Coding Projects/weather_app2_react/src/App.js"],"names":["React","useState","useEffect","axios","api","key","base_url","App","query","setQuery","city","setCity","fetchData","e","preventDefault","data","get","then","res","dateBuilder","d","date","String","window","Date","slice","days","day","getDay","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,QAAQ,EAAE;AAFA,CAAZ;;AAMA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;;AAGA,QAAMW,SAAS,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEI,UAAMC,IAAI,GAAKZ,KAAK,CAACa,GAAN,CAAW,GAAEZ,GAAG,CAACE,QAAS,aAAYE,KAAM,uBAAsBJ,GAAG,CAACC,GAAI,EAA1E,EAA6EY,IAA7E,CAAkFC,GAAG,IAAIA,GAAG,CAACH,IAA7F,CAAf;AAEL,GALD,CANa,CAcb;AACA;AACA;;;AAIA,QAAMI,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,IAAI,GAAGC,MAAM,CAAC,IAAIC,MAAM,CAACC,IAAX,EAAD,CAAjB,CADyB,CACa;;AACtCH,IAAAA,IAAI,GAAGA,IAAI,CAACI,KAAL,CAAW,CAAX,EAAa,EAAb,CAAP;AAEA,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AACA,QAAIC,GAAG,GAAGD,IAAI,CAACN,CAAC,CAACQ,MAAF,EAAD,CAAd;AAEA,WAAQ,GAAED,GAAI,IAAGN,IAAK,EAAtB;AACD,GARD;;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AACE,UAAA,SAAS,EAAC,YADZ;AAEE,UAAA,WAAW,EAAC,WAFd;AAGE,UAAA,QAAQ,EAAEC,CAAC,IAAIF,OAAO,CAAEE,CAAC,CAACgB,MAAF,CAASC,KAAX,CAHxB;AAIE,UAAA,KAAK,MAJP;AAKE,UAAA,UAAU,EAAE,MAAMlB,SAAS;AAL7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBO,WAAW,CAAC,IAAIK,IAAJ,EAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAgBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAnEQjB,G;;KAAAA,G;AAqET,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\n\nconst api = {\n  key: '7beedcd716bb91a99f2dfbd7d36d07d9',\n  base_url: 'http://api.openweathermap.org/data/2.5/weather?'\n}\n\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [city, setCity ] = useState('');\n  \n  \n  const fetchData = (e) => {\n    e.preventDefault()\n     \n        const data  =  axios.get(`${api.base_url}weather?q=${query}&units=metric&appid=${api.key}`).then(res => res.data)\n      \n  }\n\n\n  // function handleChange(e) {\n  //   setQuery(e.target.value);\n  // }\n \n\n\n  const dateBuilder = (d) => {\n    let date = String(new window.Date()); //creates a new date object with current date and time\n    date = date.slice(3,15); \n\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n\n    return `${day} ${date}`\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n \n\n\n  return (\n    <div className=\"app\">\n      <main>\n        <div className='search-box'>\n          <input type=\"text\"\n            className='search-bar'\n            placeholder='Search...'\n            onChange={e => setCity (e.target.value)}\n            value\n            onKeyPress={() => fetchData()}\n          />\n        </div>\n      \n        <div className='location-box'>\n          <div className='location'>Calgary, Canada</div>\n            <div className='date'>{dateBuilder(new Date())}</div>\n        </div>\n\n        <div className='weather-box'>\n          <div className='temp'> \n            15Â°c\n          </div>\n          \n          <div className='weather'>\n            Sunny\n          </div>\n        </div>\n        \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}